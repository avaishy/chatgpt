const startPolling = (filename) => {
  const intervalId = setInterval(async () => {
    try {
      const response = await fetch(`https://lumosusersessionmgmt-dev.aexp.com/getFileStatus/${filename}`, {
        method: 'GET',
        headers: { accept: 'application/json' },
      });

      const result = await response.json();

      if (result.is_indexed === true) {
        setUploadedFiles((prevFiles) =>
          prevFiles.map((file) =>
            file.filename === filename
              ? { ...file, isIndexing: false }
              : file
          )
        );

        // ✅ Stop polling
        clearInterval(pollingIntervalsRef.current[filename]);
        delete pollingIntervalsRef.current[filename];
        console.log(`Polling stopped for ${filename}`);
      }
    } catch (error) {
      toast.error(`Polling error for ${filename}`);
      clearInterval(pollingIntervalsRef.current[filename]);
      delete pollingIntervalsRef.current[filename];
    }
  }, 30000);

  // ✅ Store interval ID
  pollingIntervalsRef.current[filename] = intervalId;
};