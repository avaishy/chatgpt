useEffect(() => {
  const fetchWithTimeout = (url, options, timeout = 5000) => {
    return new Promise((resolve, reject) => {
      const controller = new AbortController();
      const timer = setTimeout(() => controller.abort(), timeout);

      fetch(url, {
        ...options,
        signal: controller.signal,
      })
        .then((response) => {
          clearTimeout(timer);
          resolve(response);
        })
        .catch((error) => {
          clearTimeout(timer);
          reject(error);
        });
    });
  };

  const fetchFileStats = async () => {
    const maxRetries = 3;
    let attempt = 0;

    while (attempt < maxRetries) {
      try {
        const response = await fetchWithTimeout(`${CONFIG.API_BASE_URL}/files/get_files_stats`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
            Accept: 'application/json',
          },
          body: JSON.stringify({
            user_id: userId,
            use_case: 'Earnings Call Transcript',
          }),
        }, 5000); // 5 second timeout

        if (!response.ok) {
          throw new Error(`HTTP error! status: ${response.status}`);
        }

        const data = await response.json();

        const formattedRows = data.map((item, index) => ({
          upload_time: item.crt_ts,
          name: item.file_name,
          is_main_file: item.is_main_file ? 'Yes' : 'No',
          file_indexing: item.indexing_status || 'NA',
          answer_generation: item.chats_creation_status || 'NA',
          execution_time: formatDuration(item.duration),
          user_id: userId,
          id: `${item.file_name}-${index}`,
        }));

        setRows(formattedRows);
        return; // success, exit the retry loop

      } catch (error) {
        attempt += 1;
        if (attempt === maxRetries) {
          toast.error('Failed to fetch file stats after multiple attempts.');
        } else {
          // Wait 1 second before retrying
          await new Promise((res) => setTimeout(res, 1000));
        }
      }
    }
  };

  if (userId) {
    fetchFileStats();
  }
}, [userId]);

