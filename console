const pollUntilIndexed = async (fileName, maxAttempts = 10, delay = 30000) => {
  for (let attempt = 1; attempt <= maxAttempts; attempt += 1) {
    // eslint-disable-next-line no-await-in-loop -- polling requires sequential await
    const status = await getFileStatus(fileName);
    if (status.is_indexed) return true;

    // eslint-disable-next-line no-await-in-loop, no-promise-executor-return -- setTimeout doesn't need return in promise executor
    await new Promise((resolve) => {
      setTimeout(resolve, delay);
    });
  }

  toast.error('Indexing timeout. Please try again later.');
  return false;
};const createChatSession = async ({
  selectedDocuments: docs,
  userId: uid,
  useCase: uCase,
  seletedCompanyKnowldge: compKnow,
  seletedIndustryKnowldge: indKnow,
  seletedPersonalKnowldge: perKnow,
  industryType: industry,
  dispatch,
}) => {
  const fileIds = docs.map((doc) => doc.file_id);
  const selectedContexts = [...compKnow, ...indKnow, ...perKnow];
  const contextIds = selectedContexts.map((ctx) => ctx.context_id);
  const useCaseTemp = uCase === 'earnings_call_transcript' ? 'Earnings Call Transcript' : uCase;

  // continue using `uid`, `docs`, etc.
};