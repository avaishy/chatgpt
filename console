const startFileIndexing = async (fileId) => {
  try {
    const res = await fetch('https://lumosusersessionmgmt-dev.aexp.com/indexFile', {
      method: 'POST',
      headers: {
        Accept: 'application/json',
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        file_id: fileId,
        is_additional_file: false,
      }),
    });

    if (res.status === 200) {
      console.log('Indexing completed...');
      return { status: 'fulfilled' };
    } else {
      console.error(`Indexing failed for fileId: ${fileId} with status ${res.status}`);
      return { status: 'rejected', reason: `HTTP ${res.status}` };
    }
  } catch (err) {
    console.error('Indexing error:', err);
    toast.error('Indexing failed, please try again later');
    return { status: 'rejected', reason: err.message || 'Unknown error' };
  }
};

const indexingResults = await Promise.all(
  notIndexedFiles.map((file) => startFileIndexing(file.file_id))
);

console.log('indexingResults', indexingResults);

const failedFiles = indexingResults
  .map((result, idx) => ({ result, file: notIndexedFiles[idx] }))
  .filter(({ result }) => result.status === 'rejected');

console.log('failedFiles', failedFiles);