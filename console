const getAllUserDocuments = async () => {
  let useCaseTemp = null;
  setIsLoadingDocuments(true);

  try {
    if (useCase === 'earnings_call_transcript') {
      useCaseTemp = 'Earnings Call Transcript';
    }

    const data = {
      user_id: userId,
      use_case: useCaseTemp,
    };

    const res = await fetch('https://lumosusersessionmgmt-dev.aexp.com/getUserFiles', {
      method: 'POST',
      body: JSON.stringify(data),
      headers: { 'Content-Type': 'application/json' },
    });

    const result = await res.json();

    // Move recently uploaded file to the top
    let reordered = result;
    if (recentUploadedFileName) {
      reordered = [
        ...result.filter((f) => f.file_name === recentUploadedFileName),
        ...result.filter((f) => f.file_name !== recentUploadedFileName),
      ];
    }

    setAllUserDocuments(reordered);
    dispatch(setAllUserFiles(reordered));
    setFilteredDocuments(reordered);

    if (isUploadedNewDocs && reordered.length > 0) {
      setSelectedDocuments([reordered[0]]);
    }
  } catch (error) {
    console.log(error);
    toast.error('Please try again');
  } finally {
    setIsLoadingDocuments(false);
  }
};