 
if userid is null retry until get the response
useEffect(() => {
    if (userId) {
      getPreviousSessions();
      dispatch(setRefressPreviousSession(false));
    }
  }, [getPreviousSessions, shouldPreviousSessionRefresh, userId]);
const getPreviousSessions = useCallback(async () => {
    if(!userId) return;
    
    setLoadingSessions(true);
    dispatch(addUseCase('earnings_call_transcript'));
    const sessionsArray = [];
    let localUseCase = null;
    try {
      localUseCase = 'Earnings Call Transcript';
      const data = {
        user_id: userId,
        project_type: 'LUMOS',
        user_agent: 'Windows 10',
        use_case: localUseCase,
        no_of_chats: 10,
      };
      const res = await fetch(`${CONFIG.API_BASE_URL}/chats/get_user_session_chats`, { method: 'POST', body: JSON.stringify(data), headers: { 'Content-Type': 'application/json' } });
      if (res.ok) {
        const result = await res.json();
        result.forEach((ele) => {
          if (ele.session_name != null) {
            sessionsArray.push(ele);
          } else {
            sessionsArray.push('----');
          }
        });
        setPreviousSessions(sessionsArray);
        if (showCurrentSession && refreshCurrentSession) {
          const matchedSession = result.find(
            (session) => session.chats?.some(
              (chat) => chat.chat_id === selectedChat.chat_id
            )
          );

          if (matchedSession) {
            const matchedChat = matchedSession.chats.find(
              (chat) => chat.chat_id === selectedChat.chat_id
            );
            dispatch(setCurrentSessionDetails(matchedSession));
            dispatch(setCurrentChat(matchedSession.chats));
            if (matchedChat) {
              dispatch(setSelectedChat(matchedChat));
            }
            dispatch(setRefressCurrentSession(false));
          }
        }
      }
    } catch (error) {
      toast.error('Unable to load previous sessions');
    } finally {
      setLoadingSessions(false);
    }
  }, [shouldPreviousSessionRefresh]);
