localStorage.setItem('pollingSessionId', sessionId);
localStorage.setItem('pollingUserId', userId);

useEffect(() => {
  const sessionId = localStorage.getItem('pollingSessionId');
  const userId = localStorage.getItem('pollingUserId');

  if (sessionId && userId) {
    const resumePolling = async () => {
      const intervalId = setInterval(async () => {
        try {
          const data = await getUserSessionChats({
            userId,
            useCase,
            sessionId,
          });

          if (!data || data.length === 0) {
            clearInterval(intervalId);
            localStorage.removeItem('pollingSessionId');
            localStorage.removeItem('pollingUserId');
            dispatch(setCurrentProcessingButton(false));
            dispatch(setToggleBanner(false));
            dispatch(setRefressPreviousSession(true));
            dispatch(toggleChatComponent(false));
            toast.error('Session creation failed. Please try again.');
            return;
          }

          const session = data.find((item) => item.session_id === sessionId);

          if (session?.status === 'Completed') {
            clearInterval(intervalId);
            localStorage.removeItem('pollingSessionId');
            localStorage.removeItem('pollingUserId');
            dispatch(setToggleBanner(false));
            dispatch(setCurrentProcessingButton(false));
            dispatch(setRefressPreviousSession(true));
            dispatch(setToggleProcessingStatus(false));
            dispatch(toggleChatComponent(true));
            dispatch(setCurrentSessionDetails(session));
            dispatch(setCurrentChat(session.chats));
            dispatch(setToggleCurrentSession(true));
            dispatch(toggleEditContextButton(false));
          }

          if (session?.status === 'Failed') {
            clearInterval(intervalId);
            localStorage.removeItem('pollingSessionId');
            localStorage.removeItem('pollingUserId');
            dispatch(setCurrentProcessingButton(false));
            dispatch(setToggleBanner(false));
            dispatch(setRefressPreviousSession(true));
            dispatch(toggleChatComponent(false));
            toast.error('Session creation failed.');
          }
        } catch (error) {
          clearInterval(intervalId);
          localStorage.removeItem('pollingSessionId');
          localStorage.removeItem('pollingUserId');
          console.error('Polling error:', error);
          dispatch(setCurrentProcessingButton(false));
          dispatch(setToggleBanner(false));
          dispatch(setRefressPreviousSession(true));
          dispatch(toggleChatComponent(false));
          toast.error('Something went wrong while polling.');
        }
      }, 60000); // 1-minute interval
    };

    resumePolling();
  }
}, []);